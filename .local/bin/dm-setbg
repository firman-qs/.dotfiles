#!/usr/bin/env bash
#
# Script name: dm-setbg
# Description: A wallpaper setting utility using dmenu, imv and swaybg/xwallpaper
# Dependencies: dmenu, fzf, rofi, xwallpaper or swaybg, imv
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Murtaza Udaipurwala
#               HostGrady
#               Simon Ingelsson
#               Derek Taylor

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.

# ffplay -nodisp -autoexit /home/fqs/.config/sounds/menu-01.mp3 &
set -euo pipefail

_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[ -f "${_path}/_dm-helper.sh" ]]; then
    # shellcheck disable=SC1090,SC1091
    source "${_path}/_dm-helper.sh"
else
    # shellcheck disable=SC1090
    echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

# Check if config has updates that should be displayed to the user
# check_updated_config

# Set wallpaper using either xwallpaper or swaybf
setbg() {
    case "$XDG_SESSION_TYPE" in
    'x11') nitrogen --set-zoom-fill "$1" ;;
    'wayland') swaybg -m "stretch" -i "$1" ;;
    *) err "Unknown display server" ;;
    esac
}

main() {
    choice="$(printf "Set\nRandom\nExit" | ${MENU} "What would you like to do?")"
    case "$choice" in
    "Set")
        # shellcheck disable=SC2154
        if [ "$use_imv" = 0 ]; then
            # shellcheck disable=SC2154
            wallpaper="$(sxiv -t -o "${setbg_dir}")"
            echo "$wallpaper" >"$HOME"/.cache/wall
            setbg "$wallpaper"
        else
            # Read each line printed to stdin, imv behaves weird
            # We also ignore a shellcheck issue because it's a bug
            # shellcheck disable=SC2154
            imv "${setbg_dir}" | while read -r LINE; do
                pidof "swaybg" && killall "swaybg"
                pidof "xwallpaper" && killall "xwallpaper"
                setbg "$LINE" & # Sets the wallpaper and frees it from the process
                notify-send "Wallpaper has been updated" "$LINE is the current wallpaper, edit your window manager config if you would like this to persist on reboot"
            done
        fi
        ;;
    "Random")
        valid_paper="No"
        until [ "$valid_paper" = "Yes" ]; do
            pidof "swaybg" && killall "swaybg"
            pidof "xwallpaper" && killall "xwallpaper"
            wallpaper="$(find "${setbg_dir}" -type f | shuf -n 1)"
            setbg "$wallpaper" &
            echo "$wallpaper" >"$HOME/.cache/wall"
            valid_paper="$(printf "Yes\nNo" | ${MENU} "Do you like the new wallpaper?")"
        done
        ;;
    "Exit") echo "Program terminated" && exit 1 ;;
    *) err "Invalid choice" ;;
    esac
}

noOpt=1
# If script is run with '-d', it will use 'dmenu'
# If script is run with '-f', it will use 'fzf'
# If script is run with '-d', it will use 'rofi'
while getopts "dfrh" arg 2>/dev/null; do
    case "${arg}" in
    d) # shellcheck disable=SC2153
        MENU=${DMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    f) # shellcheck disable=SC2153
        MENU=${FMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    r) # shellcheck disable=SC2153
        MENU=${RMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "@"
        ;;
    h) help ;;
    *) printf '%s\n' "Error: invalid option" "Type $(basename "$0") -h for help" ;;
    esac
    noOpt=0
done

# If script is run with NO argument, it will use 'dmenu'
[ $noOpt = 1 ] && MENU=${DMENU} && [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
